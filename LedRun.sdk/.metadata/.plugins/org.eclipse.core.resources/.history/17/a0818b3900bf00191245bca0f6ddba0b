#include "SysInitialize.h"


/*****************************************************************************
GPIO Initialize
******************************************************************************/
int GPIO_Initialize(XGpio *InstancePtr, u16 DeviceId, const char GpioName[])
{
	int status;
    
    status = XGpio_Initialize(&InstancePtr, DeviceId);
	if (status != XST_SUCCESS) {
		xil_printf("%s Initialization Failed\r\n",GpioName);
		return XST_FAILURE;
		}
	else{
		xil_printf("%s Initialization Succeed\r\n",GpioName);
	}

    return status;
}

/*****************************************************************************
UART Initialize
******************************************************************************/
int UART_Initialize(XUartLite *InstancePtr, u16 DeviceId, const char UartName[])
{
    int status;

    status = XUartLite_Initialize(&InstancePtr, DeviceId);
	if (status != XST_SUCCESS) {
		xil_printf("%s Initialization Failed\r\n",UartName);
		return XST_FAILURE;
		}
	else{
		xil_printf("%s Initialization Succeed\r\n",UartName);
	}

    return status;
}

/*****************************************************************************
Timer Initialize
******************************************************************************/
int Timer_Initialize(XTmrCtr *InstancePtr, u16 DeviceId, const char *TimerName)
{
    int status;

    status = XTmrCtr_Initialize(&InstancePtr, DeviceId);
	if (status != XST_SUCCESS) {
		xil_printf("%s Initialization Failed\r\n",*TimerName);
		return XST_FAILURE;
		}
	else{
		xil_printf("Uart1 Initialization Succeed\r\n",*TimerName);
	}

    return status;
}

/*****************************************************************************
Interrupter controler Initialize
******************************************************************************/
int Intc_Initialize(XIntc *InstancePtr, u16 DeviceId, const char *IntcName)
{
    int status;

    status = XIntc_Initialize(&InstancePtr, DeviceId);
	if (status != XST_SUCCESS) {
		xil_printf("%s Initialization Failed\r\n",*IntcName);
		return XST_FAILURE;
		}
	else{
		xil_printf("Uart1 Initialization Succeed\r\n",*IntcName);
	}

    return status;
}
/*****************************************************************************
system Initialize
******************************************************************************/
int Sys_Initialize()
{
    int status;
	//GPIO初始化
	status = GPIOInitialize(&Gpio_led,GPIO_LED_DEVICE_ID,"GPIO_LED");
    status = status + Intc_Initialize(&Intc0,INTC_0_DEVICE_ID,"Intc0");
    if (status !=DEVICENUM){
        xil_printf("System Initialize failer");
    }
    //GPIO初始化
    return  XST_FAILURE;
}